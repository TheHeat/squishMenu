{"version":3,"sources":["webpack://squishMenu/webpack/universalModuleDefinition","webpack://squishMenu/webpack/bootstrap","webpack://squishMenu/./src/getItemsWidth.js","webpack://squishMenu/./src/squishMenu.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","getItemsWidth","container","callback","sum","items","querySelectorAll","length","forEach","item","offsetWidth","console","error","squishMenu","options","document","getElementById","containerId","undefined","itemsWidth","classList","add","setStates","containerWidth","remove","window","addEventListener","getElementsByClassName","toggleClass","toggle"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,gBAAAH,GACA,iBAAAC,QACAA,QAAA,WAAAD,IAEAD,EAAA,WAAAC,IARA,CASCK,KAAA,WACD,mBCTA,IAAAC,EAAA,GAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,GAAA,CACAC,EAAAD,EACAE,GAAA,EACAT,QAAA,IAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,EAAA,CAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,YAAA,CAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,yCC/DeC,MAhBO,CAACC,EAAWC,KAChC,IAAIC,EAAM,EACV,MAAMC,EAAQH,EAAUI,iBAAiB,cAWzC,OATID,EAAME,OAAS,EACjBF,EAAMG,QAASC,IACbL,GAAOK,EAAKC,cAGdC,QAAQC,MAAM,yCAGQ,mBAAbT,GAAyBA,IAC7BC,GCiCMS,UA9CKC,IAClB,MAAMZ,EAAYa,SAASC,eAAeF,EAAQG,aAElD,QAAkBC,IAAdhB,EACFS,QAAQC,MAAM,iCACT,GAAkB,OAAdV,EACTS,QAAQC,MAAM,oCACT,CACL,MAAMO,EAAalB,EAAcC,EAAW,KAG1CA,EAAUkB,UAAUC,IAAI,kBAIpBC,EAAY,KAChB,MAAMC,EAAiBrB,EAAUQ,YAE7BS,GAAcI,IAChBrB,EAAUkB,UAAUI,OAAO,aAC3BtB,EAAUkB,UAAUI,OAAO,YAGzBL,EAAaI,GACfrB,EAAUkB,UAAUC,IAAI,cAI5BC,IAEAG,OAAOC,iBAAiB,SAAUJ,GAElBP,SAASY,uBAAuBb,EAAQc,aAE5CrB,OAAS,EAEnBQ,SAAST,qBAAqBQ,EAAQc,eAAepB,QAAQC,GAC3DA,EAAKiB,iBAAiB,QAAS,KAC7BxB,EAAUkB,UAAUS,OAAO,cAG/BlB,QAAQC,MAAM","file":"squishMenu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"squishMenu\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"squishMenu\"] = factory();\n\telse\n\t\troot[\"squishMenu\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","// Add up the widths of all the .menu-items\n// We only do it once in the default state\n// because they're apt to change width when the container is .too-small\nconst getItemsWidth = (container, callback) => {\n  let sum = 0;\n  const items = container.querySelectorAll('.menu-item');\n\n  if (items.length > 0) {\n    items.forEach((item) => {\n      sum += item.offsetWidth;\n    });\n  } else {\n    console.error('No .menu-items found in the container');\n  }\n\n  if (typeof callback === 'function') callback();\n  return sum;\n};\n\nexport default getItemsWidth;\n","import getItemsWidth from './getItemsWidth';\n\n// squishMenu\nconst squishMenu = (options) => {\n  const container = document.getElementById(options.containerId);\n\n  if (container === undefined) {\n    console.error('containerId is undefined');\n  } else if (container === null) {\n    console.error('containerId is not available');\n  } else {\n    const itemsWidth = getItemsWidth(container, () => {\n      // After we've calculated the width of all the .menu-items\n      // add class .squish-ready to the container\n      container.classList.add('squish-ready');\n    });\n\n    // Set appropriate classes\n    const setStates = () => {\n      const containerWidth = container.offsetWidth;\n\n      if (itemsWidth <= containerWidth) {\n        container.classList.remove('too-small');\n        container.classList.remove('is-open');\n      }\n\n      if (itemsWidth > containerWidth) {\n        container.classList.add('too-small');\n      }\n    };\n\n    setStates();\n\n    window.addEventListener('resize', setStates);\n\n    const toggles = document.getElementsByClassName(options.toggleClass);\n\n    if (toggles.length > 0) {\n      // Click the .menu-toggle to open the menu. Obvs.\n      document.querySelectorAll(`.${options.toggleClass}`).forEach(item =>\n        item.addEventListener('click', () => {\n          container.classList.toggle('is-open');\n        }));\n    } else {\n      console.error('No toggleClass found or toggleClass is undefined');\n    }\n  }\n};\n\nexport default squishMenu;\n"],"sourceRoot":""}